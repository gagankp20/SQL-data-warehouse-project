create or alter procedure silver.load_silver as
BEGIN

	-- adding flag and making sure no value has duplicate primary key 
	--crm_cust_info
	print 'Truncating and inserting table: silver.crm_cust_info'
	truncate table silver.crm_cust_info;
	insert into silver.crm_cust_info(
	cst_id,
	cst_key,	
	cst_firstname,
	cst_lastname,
	cst_marital_status,
	cst_gndr,
	cst_create_date)
	SELECT
			cst_id,
			cst_key,
			TRIM(cst_firstname) AS cst_firstname,
			TRIM(cst_lastname) AS cst_lastname,
			CASE 
				WHEN UPPER(TRIM(cst_marital_status)) = 'S' THEN 'Single'
				WHEN UPPER(TRIM(cst_marital_status)) = 'M' THEN 'Married'
				ELSE 'n/a'
			END AS cst_marital_status, -- Normalize marital status values to readable format
			CASE 
				WHEN UPPER(TRIM(cst_gndr)) = 'F' THEN 'Female'
				WHEN UPPER(TRIM(cst_gndr)) = 'M' THEN 'Male'
				ELSE 'n/a'
			END AS cst_gndr, -- Normalize gender values to readable format
			cst_create_date
		FROM (
			SELECT
				*,
				ROW_NUMBER() OVER (PARTITION BY cst_id ORDER BY cst_create_date DESC) AS flag_last
			FROM bronze.crm_cust_info
			WHERE cst_id IS NOT NULL
		) t
		WHERE flag_last = 1; -- Select the most recent record per customer
	
	--	select * from silver.crm_cust_info;


	--crm_prd_info
	print 'Truncating and inserting table: silver.crm_prd_info'
	truncate table silver.crm_prd_info;
	insert into silver.crm_prd_info(
	prd_id, cat_id, prd_key, prd_nm, prd_cost, prd_line, prd_start_dt, prd_end_dt)
	select 
		prd_id,
		replace(SUBSTRING(prd_key, 1, 5), '-','_') as cat_id,
		SUBSTRING(prd_key, 7, LEN(prd_key)) as prd_key,
		prd_nm, 
		isnull(prd_cost, 0 ) as prd_cost,
		case upper(trim(prd_line))  
		when 'M' then 'Mountain'
		when 'R' then 'Road'
		when 'S' then 'Other Sales'
		when 'T' then 'Touring'
		else 'n/a'
		end as prd_line,
		cast(prd_start_dt as date) as prd_start_dt,
		cast(lead(prd_start_dt) over(partition by prd_key order by prd_start_dt)-1 as date) as prd_end_dt
	from bronze.crm_prd_info 
	order by prd_key , prd_start_dt;

	--select * from bronze.crm_prd_info;


	--crm.sales.details
	print 'Truncating and inserting table: silver.crm_sales_details'
	truncate table silver.crm_sales_details;
	insert into silver.crm_sales_details(
	sls_ord_num,
	sls_prd_key, 
	sls_cust_id,
	sls_order_dt, 
	sls_ship_dt, 
	sls_due_dt, 
	sls_sales, 
	sls_quantity,
	sls_price
	)
	select 
	sls_ord_num,
	sls_prd_key,
	sls_cust_id,
	case when sls_order_dt = 0 or len(sls_order_dt) != 8 then null 
		else cast(cast(sls_order_dt as varchar) as date)
		end as sls_order_dt,

	case when sls_ship_dt = 0 or len(sls_order_dt) != 8 then null 
		else cast(cast(sls_ship_dt as varchar) as date)
		end as sls_ship_dt,

	case when sls_due_dt = 0 or len(sls_order_dt) != 8 then null 
		else cast(cast(sls_due_dt as varchar) as date)
		end as sls_due_dt,

	case when sls_sales is null or sls_sales <=0 or sls_sales != sls_quantity * abs(sls_price)
		then sls_quantity * abs(sls_price)
		else sls_sales
		end as sls_sales,
	sls_quantity,

	case when sls_price is null or sls_price <=0
		then sls_sales/nullif(sls_quantity,0)
		else sls_price
		end as price 

	from bronze.crm_sales_details;

	--select * from silver.crm_sales_details;


	--erp.cust.az12
	print 'Truncating and inserting table: silver.erp_cust_az12'
	truncate table silver.erp_cust_az12;
	insert into silver.erp_cust_az12(cid, bdate, gen)
	select 
	case when cid like 'NAS%' then substring( cid, 4, len(cid))
		else cid 
	end as cid, 
	case when bdate >getdate() then NULL
	else bdate
	end as bdate, 
	case 
		when upper(trim(gen)) in ('F', 'FEMALE') then 'Female'
		when upper(trim(gen)) in ('M', 'MALE') then 'Male'
		else 'n/a'
	end as gen
	from bronze.erp_cust_az12;




	print 'Truncating and inserting table: silver.erp_loc_a101'
	truncate table silver.erp_loc_a101;
	insert into silver.erp_loc_a101(cid, cntry)

	select replace(cid, '-', '') ,
	case when trim(cntry) = 'DE' then 'Germany'
		 when trim(cntry) in ('US' , 'USA') then 'United States'
		 when trim(cntry) = '' or cntry is null then 'n/a'
		 else trim(cntry)
	end as cntry
	from bronze.erp_loc_a101 ;

	--select * from silver.erp_loc_a101;



	print 'Truncating and inserting table: silver.erp_px_cat_g1v2'
	truncate table silver.erp_px_cat_g1v2;
	insert into silver.erp_px_cat_g1v2
	(id, cat, subcat, maintenance) 
	select id, cat, subcat, maintenance from bronze.erp_px_cat_g1v2;

	--select * from silver.erp_px_cat_g1v2;

END
